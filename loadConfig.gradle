apply from: "${CONFIG_URL}/global.gradle"

task prepareConfigCache {
    def localPath = cacheConfigs
    def remoteUrl = remoteConfigsUrl

    def cacheFiles = [
            ["checkstyle/", "checkstyle.xml", "checkstyle_suppressions.xml"],
            ["gradle/", "android.gradle", "androidJarBuild.gradle", "application.gradle", "checkstyle.gradle", "dependencies.gradle", "deployment.gradle", "dexcount.gradle", "findbugs.gradle", "jacoco.gradle", "library.gradle", "librarySimplify.gradle", "retrolambda.gradle", "sonar.gradle", "upload.gradle", "uploadJar.gradle", "sign.gradle"],
            ["findbugs/", "findbugs-filter.xml"],
            ["custom/", "application.gradle", "library.gradle", "base.gradle"]
    ]

    cacheFiles.each { files ->
        def subDir = files[0]
        def dir = new File("${localPath}/${subDir}")
        if (!dir.exists()) {
            dir.mkdirs()
            println "create " + dir.absolutePath
        }

        // remote dir
        files = files - files[0]
        files.each { file ->
            def localFile = new File(dir, file)
            downloadFile(localFile, remoteUrl + subDir + file)
        }
    }
}